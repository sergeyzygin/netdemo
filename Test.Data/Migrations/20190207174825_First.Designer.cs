// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test.Data.Context;

namespace Test.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190207174825_First")]
    partial class First
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Test.Entities.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Test.Entities.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BasicSalary");

                    b.Property<Guid?>("ChiefId");

                    b.Property<int>("CompanyId");

                    b.Property<DateTime>("DateDeployment");

                    b.Property<string>("Name");

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ChiefId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");

                    b.HasDiscriminator<string>("Type").HasValue("Employee");
                });

            modelBuilder.Entity("Test.Entities.Models.Manager", b =>
                {
                    b.HasBaseType("Test.Entities.Models.Employee");


                    b.ToTable("Manager");

                    b.HasDiscriminator().HasValue("Manager");
                });

            modelBuilder.Entity("Test.Entities.Models.Sales", b =>
                {
                    b.HasBaseType("Test.Entities.Models.Employee");


                    b.ToTable("Sales");

                    b.HasDiscriminator().HasValue("Sales");
                });

            modelBuilder.Entity("Test.Entities.Models.Worker", b =>
                {
                    b.HasBaseType("Test.Entities.Models.Employee");


                    b.ToTable("Worker");

                    b.HasDiscriminator().HasValue("Worker");
                });

            modelBuilder.Entity("Test.Entities.Models.Employee", b =>
                {
                    b.HasOne("Test.Entities.Models.Employee", "Chief")
                        .WithMany("Subordinates")
                        .HasForeignKey("ChiefId");

                    b.HasOne("Test.Entities.Models.Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
